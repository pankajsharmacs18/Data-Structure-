package graphList;

import java.util.LinkedList;
import java.util.Scanner;

class Graph
{
    int vertex;
    LinkedList<Integer> list[];
    public Graph(int vertex)
    {
        this.vertex=vertex;
        list=new    LinkedList[vertex];
        for (int i = 0; i <vertex ; i++)
        {
        list[i]=new LinkedList<>();
        }

    }
    public void addEdge(int s,int d)
    {
        // it's provides path beetwnn source to destination
        list[s].addFirst(d);
        // It's didrection for bi-directional graph
        list[d].addFirst(s);
    }
    public void display()
    {
        System.out.println("Graph is here to be operated : ");
        for (int i = 0; i <vertex ; i++)
        {
        if (list[i].size()>0)
        {
            System.out.println("vertex "+i+" is conected to : ");
            for (int j = 0; j <list[i].size() ; j++)
            {
                System.out.print(list[i].get(j));
            }
        }
            System.out.println();
        }
    }

}
public class GraphMain
{
    public static void main(String... PankajSharma)
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter Number of vertex to be add ");
        int v=sc.nextInt();
        Graph obj=new Graph(v);
        int c=0;
        do {
            System.out.println("Enter Source Edge and Destination edge : ");
            int s=sc.nextInt();
            int d=sc.nextInt();
            if (s<=v||d<=v) {

                obj.addEdge(s - 1, d - 1);
            }
            else
                {
                    System.out.println("Entered Wrong Input : ");
                }
            System.out.println("Enter 1 for more Value ");
            c=sc.nextInt();
        }while (c==1);
        obj.display();
        System.out.println("Pankaj Sharma");
    }
}
